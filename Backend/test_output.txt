============================= test session starts =============================
platform win32 -- Python 3.11.1, pytest-8.3.2, pluggy-1.5.0 -- C:\Users\Enis Bukalo\Documents\Venvs\Kratos\Scripts\python.exe
cachedir: .pytest_cache
rootdir: C:\Users\Enis Bukalo\Documents\GitHub\Kratos\Backend
plugins: anyio-4.4.0, asyncio-0.23.8
asyncio: mode=Mode.STRICT
collecting ... collected 16 items

tests/test_exercises.py::test_create_exercise PASSED                     [  6%]
tests/test_exercises.py::test_get_exercises PASSED                       [ 12%]
tests/test_exercises.py::test_delete_exercises PASSED                    [ 18%]
tests/test_exercises.py::test_update_exercises PASSED                    [ 25%]
tests/test_sets.py::test_create_set PASSED                               [ 31%]
tests/test_sets.py::test_get_sets PASSED                                 [ 37%]
tests/test_sets.py::test_delete_sets PASSED                              [ 43%]
tests/test_sets.py::test_update_sets FAILED                              [ 50%]
tests/test_users.py::test_create_user PASSED                             [ 56%]
tests/test_users.py::test_get_users PASSED                               [ 62%]
tests/test_users.py::test_delete_users PASSED                            [ 68%]
tests/test_users.py::test_update_users PASSED                            [ 75%]
tests/test_workouts.py::test_create_workout PASSED                       [ 81%]
tests/test_workouts.py::test_get_workouts PASSED                         [ 87%]
tests/test_workouts.py::test_delete_workouts PASSED                      [ 93%]
tests/test_workouts.py::test_update_workouts PASSED                      [100%]

================================== FAILURES ===================================
______________________________ test_update_sets _______________________________

client = <starlette.testclient.TestClient object at 0x00000184708B57D0>
generate_sets = [SetReply(id=1, reps=7, weight=16.29, duration=90, date=datetime.date(2024, 11, 16), workout=Workout(id=10, name='GDGQ...ITCEGCTVXUIMQZPOFHFWTPFBPC'), user=User(id=5, name='MEZUFVVGFUPBNHXXRQOENTRMV', height=99.4428, weight=217.3596)), ...]

    def test_update_sets(client: TestClient, generate_sets: list[schemas.SetReply]):
        for set in generate_sets:
            new_reps = random.randint(1, 100)
            new_weight = round(random.uniform(0, 100), 2)
            new_duration = random.randint(0, 300)
            new_date = (datetime.now() + timedelta(days=random.randint(-5, 5))).date().isoformat()
    
>           response = client.put(
                f"/Set/{set.id}",
                json={
                    "reps": new_reps,
                    "weight": new_weight,
                    "duration": new_duration,
                    "date": new_date,
                    "exercise_id": set.exercise.id,
                    "workout_id": set.workout.id,
                    "user_id": set.user.id,
                },
            )

tests\test_sets.py:48: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
..\..\..\Venvs\Kratos\Lib\site-packages\starlette\testclient.py:668: in put
    return super().put(
..\..\..\Venvs\Kratos\Lib\site-packages\httpx\_client.py:1182: in put
    return self.request(
..\..\..\Venvs\Kratos\Lib\site-packages\starlette\testclient.py:516: in request
    return super().request(
..\..\..\Venvs\Kratos\Lib\site-packages\httpx\_client.py:827: in request
    return self.send(request, auth=auth, follow_redirects=follow_redirects)
..\..\..\Venvs\Kratos\Lib\site-packages\httpx\_client.py:914: in send
    response = self._send_handling_auth(
..\..\..\Venvs\Kratos\Lib\site-packages\httpx\_client.py:942: in _send_handling_auth
    response = self._send_handling_redirects(
..\..\..\Venvs\Kratos\Lib\site-packages\httpx\_client.py:979: in _send_handling_redirects
    response = self._send_single_request(request)
..\..\..\Venvs\Kratos\Lib\site-packages\httpx\_client.py:1015: in _send_single_request
    response = transport.handle_request(request)
..\..\..\Venvs\Kratos\Lib\site-packages\starlette\testclient.py:398: in handle_request
    raise exc
..\..\..\Venvs\Kratos\Lib\site-packages\starlette\testclient.py:395: in handle_request
    portal.call(self.app, scope, receive, send)
..\..\..\Venvs\Kratos\Lib\site-packages\anyio\from_thread.py:287: in call
    return cast(T_Retval, self.start_task_soon(func, *args).result())
..\..\..\..\AppData\Local\Programs\Python\Python311\Lib\concurrent\futures\_base.py:456: in result
    return self.__get_result()
..\..\..\..\AppData\Local\Programs\Python\Python311\Lib\concurrent\futures\_base.py:401: in __get_result
    raise self._exception
..\..\..\Venvs\Kratos\Lib\site-packages\anyio\from_thread.py:218: in _call_func
    retval = await retval_or_awaitable
..\..\..\Venvs\Kratos\Lib\site-packages\fastapi\applications.py:1054: in __call__
    await super().__call__(scope, receive, send)
..\..\..\Venvs\Kratos\Lib\site-packages\starlette\applications.py:123: in __call__
    await self.middleware_stack(scope, receive, send)
..\..\..\Venvs\Kratos\Lib\site-packages\starlette\middleware\errors.py:186: in __call__
    raise exc
..\..\..\Venvs\Kratos\Lib\site-packages\starlette\middleware\errors.py:164: in __call__
    await self.app(scope, receive, _send)
..\..\..\Venvs\Kratos\Lib\site-packages\starlette\middleware\cors.py:85: in __call__
    await self.app(scope, receive, send)
..\..\..\Venvs\Kratos\Lib\site-packages\starlette\middleware\exceptions.py:65: in __call__
    await wrap_app_handling_exceptions(self.app, conn)(scope, receive, send)
..\..\..\Venvs\Kratos\Lib\site-packages\starlette\_exception_handler.py:64: in wrapped_app
    raise exc
..\..\..\Venvs\Kratos\Lib\site-packages\starlette\_exception_handler.py:53: in wrapped_app
    await app(scope, receive, sender)
..\..\..\Venvs\Kratos\Lib\site-packages\starlette\routing.py:756: in __call__
    await self.middleware_stack(scope, receive, send)
..\..\..\Venvs\Kratos\Lib\site-packages\starlette\routing.py:776: in app
    await route.handle(scope, receive, send)
..\..\..\Venvs\Kratos\Lib\site-packages\starlette\routing.py:297: in handle
    await self.app(scope, receive, send)
..\..\..\Venvs\Kratos\Lib\site-packages\starlette\routing.py:77: in app
    await wrap_app_handling_exceptions(app, request)(scope, receive, send)
..\..\..\Venvs\Kratos\Lib\site-packages\starlette\_exception_handler.py:64: in wrapped_app
    raise exc
..\..\..\Venvs\Kratos\Lib\site-packages\starlette\_exception_handler.py:53: in wrapped_app
    await app(scope, receive, sender)
..\..\..\Venvs\Kratos\Lib\site-packages\starlette\routing.py:72: in app
    response = await func(request)
..\..\..\Venvs\Kratos\Lib\site-packages\fastapi\routing.py:278: in app
    raw_response = await run_endpoint_function(
..\..\..\Venvs\Kratos\Lib\site-packages\fastapi\routing.py:191: in run_endpoint_function
    return await dependant.call(**values)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

model_to_update = CreateSet(reps=48, weight=17.62, duration=233, date=datetime.date(2024, 11, 16), exercise_id=6, workout_id=10, user_id=10)
id = 1, db = <sqlalchemy.orm.session.Session object at 0x00000184709C4C90>

    @router.put("/{id}", response_model=schemas.ExerciseSet)
    async def update_set(model_to_update: schemas.CreateSet, id: int = Path(gt=0), db: Session = Depends(get_db)):
        exercise = db.query(models.Exercise).filter(models.Exercise.id == model_to_update.exercise_id).first()
        if exercise is None:
            raise HTTPException(status_code=404, detail=f"No Exercise With Id {model_to_update.exercise_id} Exists.")
        workout = db.query(models.Workout).filter(models.Workout.id == model_to_update.workout_id).first()
        if workout is None:
            raise HTTPException(status_code=404, detail=f"No Workout With Id {model_to_update.workout_id} Exists.")
        user = db.query(models.User).filter(models.User.id == model_to_update.user_id).first()
        if user is None:
            raise HTTPException(status_code=404, detail=f"No User With Id {model_to_update.user_id} Exists.")
    
        query = db.query(models.ExerciseSet).filter(models.ExerciseSet.id == id)
        set_to_update = query.first()
    
        if set_to_update is None:
            raise HTTPException(status_code=404, detail=f"No Set With Id {id} Exists.")
    
        query.update(model_to_update.model_dump(), synchronize_session=False)
        db.commit()
        db.refresh(set_to_update)
    
>       return schemas.ExerciseSet(id=set_to_update.id, reps=set_to_update.reps, date=set_to_update.date, exercise=exercise)
E       pydantic_core._pydantic_core.ValidationError: 2 validation errors for ExerciseSet
E       weight
E         Field required [type=missing, input_value={'id': 1, 'reps': 48, 'da... at 0x00000184707B2090>}, input_type=dict]
E           For further information visit https://errors.pydantic.dev/2.8/v/missing
E       duration
E         Field required [type=missing, input_value={'id': 1, 'reps': 48, 'da... at 0x00000184707B2090>}, input_type=dict]
E           For further information visit https://errors.pydantic.dev/2.8/v/missing

app\routers\sets.py:79: ValidationError
=========================== short test summary info ===========================
FAILED tests/test_sets.py::test_update_sets - pydantic_core._pydantic_core.ValidationError: 2 validation errors for ExerciseSet
weight
  Field required [type=missing, input_value={'id': 1, 'reps': 48, 'da... at 0x00000184707B2090>}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.8/v/missing
duration
  Field required [type=missing, input_value={'id': 1, 'reps': 48, 'da... at 0x00000184707B2090>}, input_type=dict]
    For further information visit https://errors.pydantic.dev/2.8/v/missing
======================== 1 failed, 15 passed in 3.90s =========================
